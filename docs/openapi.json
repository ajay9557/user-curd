{
  "openapi": "3.0.1",
  "info": {
    "title": "User CRUD",
    "description": "This is API documentation for user crud operations",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "security": [
    {
      "OAuth2": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000/api/users"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Fetch all users",
        "description": "This can only be done by zopsmart user",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Fetch all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseArray"
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This can only be done by zopsmart user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by user id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userId supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Updated user object",
        "operationId": "updateUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "new user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userId supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found for given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete user",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of user that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found for given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Ridhdhish"
          },
          "email": {
            "type": "string",
            "example": "ridhdhish@gmail.com"
          },
          "phone": {
            "type": "string",
            "example": "8320578360"
          },
          "age": {
            "type": "integer",
            "example": 21
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "ApiResponseArray": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfull operation"
          }
        }
      },
      "ApiResponseObject": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }            
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfull operation"
          }
        }
      },
      "400ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 400
          },
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },
      "404ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 404
          },
          "error": {
            "type": "string",
            "example": "Not found"
          }
        }
      },
      "500ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 500
          },
          "error": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Ridhdhish"
          },
          "email": {
            "type": "string",
            "example": "ridhdhish@gmail.com"
          },
          "phone": {
            "type": "string",
            "example": "8320578360"
          },
          "age": {
            "type": "integer",
            "example": 21
          }
        }
      }
    }
  }
}
